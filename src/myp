#!/bin/bash

header(){
	echo -e "\n\t╔════════════════════════════════════════════════════════╗"
	echo -e   "\t║                 Diego Zambelli Sessona                 ║"
	echo -e   "\t║             email:  diego.sessona@gmail.com            ║"
	echo -e   "\t╠════════════════════════════════════════════════════════╣"
	echo -e   "\t║    24/06/2013                                myp.sh    ║"
	echo -e   "\t║                                                        ║"
	echo -e   "\t║    Change folder to one of the favourites (in list)    ║"
	echo -e   "\t╚════════════════════════════════════════════════════════╝\n"
}

usage(){
	echo -e "\nmyp = my places = Organize and jump to your most used paths to improve your productivity!"
	echo -e "\nUsage: myp [OPTION]"
	echo -e "   or: myp [OPTION] PATH DESCRIPTION"
	echo -e "\nMandatory arguments to long options are mandatory for short options too."
    echo -e "  -h, --help                show this screen"
    echo -e "  -r, --remove              remove a path from the list"
    echo -e "  -a, --add                 add a path to the list\n"
    echo -e "Examples: myp                             show the list of paths to change the current directory to"
    echo -e "          myp 1                           change the current folder to the first path in the list"
    echo -e "          myp -r                          show the list of paths so you can remove one"
    echo -e "          myp -a /foo \"the folder\"        add the path /foo and description \"the folder\" to the end of the list"
    echo -e "          myp -a \`pwd\` \"desc folder\"      add the current path and description to the end of the list\n" 
}

NAMES=()

PATHS=()

load(){
	if [ ! -f "$HOME/.tmpplaces" ]
	then
		touch $HOME/.tmpplaces
	fi
	IFS=$'\t'
	while read path name
	do  
		PATHS+=("${path}")
		NAMES+=("${name}")
	done < "$HOME/.tmpplaces"
}

show_options(){
	echo -e -e "\n  Your most used places:\n"
	for (( i=1; i<=${#PATHS[@]}; i++)); do
	printf "  %-4s%-50s%s\n" "${i})" ${NAMES[${i}-1]} "(${PATHS[${i}-1]})"
	done 
}

changeFolder(){
  	cd ${PATHS[${choice}-1]}
}

changeit(){
	max=${#PATHS[@]}
	max=$[max + 1]
	if [[ ${choice} -gt 0 && ${choice} -lt ${max} ]]
	then
	  	changeFolder
	else
	  	echo -e "\n  Invalid option, please enter a number between 1 and ${#PATHS[@]} \n"
	fi
}

removeit(){
	max=${#PATHS[@]}
	max=$[max + 1]
	if [[ ${choice} -gt 0 && ${choice} -lt ${max} ]]
	then
	  	sed -i '' ${choice}d $HOME/.tmpplaces
	else
	  	echo -e "\n  Invalid option, please enter a number between 1 and ${#PATHS[@]} \n"
	fi
}


# show the help
###############
if [ "$1" == "help" ] || [ "$1" == "--help" ] || [ "$1" == "-h" ]
	then
		usage
		return
fi

# add a path
############
if [ "$1" == "add" ] || [ "$1" == "-a" ]
  then 
  	if [ $# -eq 3 ]
		then
		  	echo "$2"$'\t'"$3" >> $HOME/.tmpplaces
		else
			echo "Show help"
	fi
  	return
fi

load
choice=0

# remove path
############
if [ "$1" == "remove" ] || [ "$1" == "-r" ]
  then 
  	show_options
	echo -e -n "\n  Please choose an option to delete: "
	read choice
	removeit
  	return
fi

if [ $# -eq 0 ]
	then
	show_options
	echo -e -n "\n  Please choose an option: "
	read choice
	changeit
else
	let choice=$1
	changeit
fi
